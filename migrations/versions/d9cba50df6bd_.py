"""empty message

Revision ID: d9cba50df6bd
Revises: 
Create Date: 2021-02-01 17:25:52.452785

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd9cba50df6bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coaches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('phone', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('school_name', sa.Text(), nullable=False),
    sa.Column('stripe_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('stripe_id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('session_id', sa.Text(), nullable=False),
    sa.Column('info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coach_id'], ['coaches.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tourneys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('close_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('min_grade', sa.Integer(), nullable=False),
    sa.Column('max_grade', sa.Integer(), nullable=False),
    sa.Column('info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coaches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tourney_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['tourney_id'], ['tourneys.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tourneycoach',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tourney_id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('paid', sa.Boolean(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coaches.id'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['tourneys.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tourney_id', 'coach_id', name='tc_constraint')
    )
    op.create_table('tourneycollabs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tourney_id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coaches.id'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['tourneys.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tourney_id', 'coach_id', name='tcollab_constraint')
    )
    op.create_table('tourneystudent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tourney_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('taking_test', sa.Boolean(), nullable=False),
    sa.Column('test', sa.Text(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('tie', sa.Text(), nullable=False),
    sa.Column('reg_status', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['tourney_id'], ['tourneys.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tourney_id', 'student_id', 'test', name='ts_constraint')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tourneystudent')
    op.drop_table('tourneycollabs')
    op.drop_table('tourneycoach')
    op.drop_table('dataentry')
    op.drop_table('tourneys')
    op.drop_table('students')
    op.drop_table('schools')
    op.drop_table('orders')
    op.drop_table('coaches')
    # ### end Alembic commands ###
